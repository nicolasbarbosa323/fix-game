local Players = game:GetService("Players")
local player = Players.LocalPlayer

local deathSounds = {
    "rbxassetid://399953818",
    "rbxassetid://8490606735",
    "rbxassetid://17593207303",
    "rbxassetid://5693336619",
    "rbxassetid://6882766712"
}

local currentDeathSound = nil

local function stopDeathSound()
    if currentDeathSound and currentDeathSound.IsPlaying then
        currentDeathSound:Stop()
        currentDeathSound:Destroy()
        currentDeathSound = nil
    end
end

local function playRandomDeathSound()
    stopDeathSound()
    local sound = Instance.new("Sound")
    sound.SoundId = deathSounds[math.random(1, #deathSounds)]
    sound.Volume = 1
    sound.Parent = workspace
    sound:Play()
    currentDeathSound = sound
    sound.Ended:Connect(function()
        sound:Destroy()
        if currentDeathSound == sound then
            currentDeathSound = nil
        end
    end)
end

local function onCharacterAdded(character)
    stopDeathSound() -- Para som ao respawnar

    -- Tentar remover o som de morte padrão (se existir)
    local function removeDefaultDeathSounds()
        for _, descendant in pairs(character:GetDescendants()) do
            if descendant:IsA("Sound") and descendant.Name == "Died" then
                descendant:Destroy()
            end
        end
    end

    removeDefaultDeathSounds()
    character.DescendantAdded:Connect(function(desc)
        if desc:IsA("Sound") and desc.Name == "Died" then
            desc:Destroy()
        end
    end)

    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Died:Connect(playRandomDeathSound)
end

player.CharacterAdded:Connect(onCharacterAdded)

if player.Character then
    onCharacterAdded(player.Character)
end

local player = game.Players.LocalPlayer

local cylinders = {}

player.CharacterAdded:Connect(function(char)
    -- Gravidade volta ao normal ao respawnar
    workspace.Gravity = 196.2

    -- Destroi cilindros antigos
    for _, cyl in ipairs(cylinders) do
        if cyl and cyl.Parent then
            cyl:Destroy()
        end
    end
    cylinders = {}

    local humanoid = char:WaitForChild("Humanoid")
    local rootPart = char:WaitForChild("HumanoidRootPart")

    humanoid.Died:Connect(function()
        -- Zera gravidade instantaneamente
        workspace.Gravity = 0

        -- Solta as partes
        for _, descendant in ipairs(char:GetDescendants()) do
            if descendant:IsA("Motor6D") or descendant:IsA("Weld") or descendant:IsA("BallSocketConstraint") or descendant:IsA("WeldConstraint") then
                descendant:Destroy()
            end
        end

        -- IMPULSO EXTREMAMENTE FORTE E GIRO
        for _, part in ipairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false

                -- IMPULSO GIGANTE pra cima
                part:ApplyImpulse(Vector3.new(0, part:GetMass() * 50000, 0))

                -- GIRO MUITO LOUCO
                part:ApplyAngularImpulse(Vector3.new(
                    math.random(-50000,50000),
                    math.random(-50000,50000),
                    math.random(-50000,50000)
                ))
            end
        end

        -- Cria fila de cilindros até um limite certo
        local cylinderCount = 150 -- Aumentado para 150 cilindros
        local cylinderHeight = 50
        local startHeight = -100

        for i = 0, cylinderCount - 1 do
            local cylinder = Instance.new("Part")
            cylinder.Shape = Enum.PartType.Cylinder
            cylinder.Size = Vector3.new(20, cylinderHeight, 20)
            cylinder.Color = Color3.fromRGB(255, 255, 0)
            cylinder.Transparency = 0.5
            cylinder.Anchored = true
            cylinder.CanCollide = false

            cylinder.CFrame = rootPart.CFrame * CFrame.new(0, startHeight + (i * cylinderHeight), 0) * CFrame.Angles(0, 0, math.rad(90))
            cylinder.Parent = workspace

            table.insert(cylinders, cylinder)
        end
    end)
end)
